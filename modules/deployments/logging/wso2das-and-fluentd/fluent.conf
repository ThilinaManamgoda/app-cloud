<source>
  @type tail
  path /var/log/containers/*.log
  pos_file /tmp/wso2das-fluentd-containers.log.pos
  time_key @timestamp
  time_format "%Y-%m-%dT%H:%M:%S.%L%Z"
  tag kubernetes.*
  format json
  read_from_head true
  keep_time_key true
</source>

<filter kubernetes.**>
  @type kubernetes_metadata
  verify_ssl false
  kubernetes_url <K8S_API_SERVER_URL>
  ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  client_cert /fluentd/etc/certs/admin.pem
  client_key /fluentd/etc/certs/admin-key.pem
  bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
  preserve_json_log true
</filter>

<filter kubernetes.**>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
        docker_container_id ${record['docker']['container_id']}
        kubernetes_namespace_name ${record['kubernetes']['namespace_name']}
        kubernetes_pod_name ${record['kubernetes']['pod_name']}
        kubernetes_container_name ${record['kubernetes']['container_name']}
        kubernetes_host ${record['kubernetes']['host']}
        kubernetes_labels ${record['kubernetes']['labels']}
  </record>
 remove_keys docker,kubernetes
</filter>

<match cleanup.**>
    type record_reformer
    time_nano ${t = Time.now; ((t.to_i * 1000000000) + t.nsec).to_s}
    tag ${tag_suffix[1]}
</match>

<filter kubernetes.**>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
        payloadData ${record}
  </record>
</filter>

<filter kubernetes.**>
  @type record_transformer
  enable_ruby
  auto_typecast true
  <record>
        event ${record}
  </record>
</filter>

# Do not directly collect fluentd's own logs to avoid infinite loops.
<match fluent.**>
  type null
</match>

<match **>
  @type  http_ext
  use_ssl         true
  verify_ssl      false
  endpoint_url    https://<WSO2DAS_SERVER_IP_AND_PORT>/endpoints/LogEventReceiver
  http_method     post
  serializer      json
  rate_limit_msec 0
  raise_on_error  false
  authentication  basic
  username        <WSO2DAS_DATA_PUBLISHER_USER>
  password        <WSO2DAS_DATA_PUBLISHER_USER_PASSWORD>
</match>
                                                                                                                                                                                                                      
